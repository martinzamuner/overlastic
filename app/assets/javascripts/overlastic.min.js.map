{"version":3,"file":"overlastic.min.js","sources":["../../../node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js","../../javascript/overlastic/clickInterceptor.js","../../javascript/overlastic/dialogElement.js","../../javascript/overlastic/paneElement.js","../../javascript/overlastic/index.js"],"sourcesContent":["function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// Older browsers don't support event options, feature detect it.\n\n// Adopted and modified solution from Bohdan Didukh (2017)\n// https://stackoverflow.com/questions/41594997/ios-10-safari-prevent-scrolling-behind-a-fixed-overlay-and-maintain-scroll-posi\n\nvar hasPassiveEvents = false;\nif (typeof window !== 'undefined') {\n  var passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true;\n      return undefined;\n    }\n  };\n  window.addEventListener('testPassive', null, passiveTestOptions);\n  window.removeEventListener('testPassive', null, passiveTestOptions);\n}\n\nvar isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1);\n\n\nvar locks = [];\nvar documentListenerAdded = false;\nvar initialClientY = -1;\nvar previousBodyOverflowSetting = void 0;\nvar previousBodyPosition = void 0;\nvar previousBodyPaddingRight = void 0;\n\n// returns true if `el` should be allowed to receive touchmove events.\nvar allowTouchMove = function allowTouchMove(el) {\n  return locks.some(function (lock) {\n    if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {\n      return true;\n    }\n\n    return false;\n  });\n};\n\nvar preventDefault = function preventDefault(rawEvent) {\n  var e = rawEvent || window.event;\n\n  // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n  if (allowTouchMove(e.target)) {\n    return true;\n  }\n\n  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n  if (e.touches.length > 1) return true;\n\n  if (e.preventDefault) e.preventDefault();\n\n  return false;\n};\n\nvar setOverflowHidden = function setOverflowHidden(options) {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    var _reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;\n    var scrollBarGap = window.innerWidth - document.documentElement.clientWidth;\n\n    if (_reserveScrollBarGap && scrollBarGap > 0) {\n      var computedBodyPaddingRight = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'), 10);\n      previousBodyPaddingRight = document.body.style.paddingRight;\n      document.body.style.paddingRight = computedBodyPaddingRight + scrollBarGap + 'px';\n    }\n  }\n\n  // If previousBodyOverflowSetting is already set, don't set it again.\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow;\n    document.body.style.overflow = 'hidden';\n  }\n};\n\nvar restoreOverflowSetting = function restoreOverflowSetting() {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight;\n\n    // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n    previousBodyPaddingRight = undefined;\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting;\n\n    // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n    previousBodyOverflowSetting = undefined;\n  }\n};\n\nvar setPositionFixed = function setPositionFixed() {\n  return window.requestAnimationFrame(function () {\n    // If previousBodyPosition is already set, don't set it again.\n    if (previousBodyPosition === undefined) {\n      previousBodyPosition = {\n        position: document.body.style.position,\n        top: document.body.style.top,\n        left: document.body.style.left\n      };\n\n      // Update the dom inside an animation frame \n      var _window = window,\n          scrollY = _window.scrollY,\n          scrollX = _window.scrollX,\n          innerHeight = _window.innerHeight;\n\n      document.body.style.position = 'fixed';\n      document.body.style.top = -scrollY;\n      document.body.style.left = -scrollX;\n\n      setTimeout(function () {\n        return window.requestAnimationFrame(function () {\n          // Attempt to check if the bottom bar appeared due to the position change\n          var bottomBarHeight = innerHeight - window.innerHeight;\n          if (bottomBarHeight && scrollY >= innerHeight) {\n            // Move the content further up so that the bottom bar doesn't hide it\n            document.body.style.top = -(scrollY + bottomBarHeight);\n          }\n        });\n      }, 300);\n    }\n  });\n};\n\nvar restorePositionSetting = function restorePositionSetting() {\n  if (previousBodyPosition !== undefined) {\n    // Convert the position from \"px\" to Int\n    var y = -parseInt(document.body.style.top, 10);\n    var x = -parseInt(document.body.style.left, 10);\n\n    // Restore styles\n    document.body.style.position = previousBodyPosition.position;\n    document.body.style.top = previousBodyPosition.top;\n    document.body.style.left = previousBodyPosition.left;\n\n    // Restore scroll\n    window.scrollTo(x, y);\n\n    previousBodyPosition = undefined;\n  }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\nvar isTargetElementTotallyScrolled = function isTargetElementTotallyScrolled(targetElement) {\n  return targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false;\n};\n\nvar handleScroll = function handleScroll(event, targetElement) {\n  var clientY = event.targetTouches[0].clientY - initialClientY;\n\n  if (allowTouchMove(event.target)) {\n    return false;\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event);\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event);\n  }\n\n  event.stopPropagation();\n  return true;\n};\n\nexport var disableBodyScroll = function disableBodyScroll(targetElement, options) {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');\n    return;\n  }\n\n  // disableBodyScroll must not have been called on this targetElement before\n  if (locks.some(function (lock) {\n    return lock.targetElement === targetElement;\n  })) {\n    return;\n  }\n\n  var lock = {\n    targetElement: targetElement,\n    options: options || {}\n  };\n\n  locks = [].concat(_toConsumableArray(locks), [lock]);\n\n  if (isIosDevice) {\n    setPositionFixed();\n  } else {\n    setOverflowHidden(options);\n  }\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY;\n      }\n    };\n    targetElement.ontouchmove = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement);\n      }\n    };\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = true;\n    }\n  }\n};\n\nexport var clearAllBodyScrollLocks = function clearAllBodyScrollLocks() {\n  if (isIosDevice) {\n    // Clear all locks ontouchstart/ontouchmove handlers, and the references.\n    locks.forEach(function (lock) {\n      lock.targetElement.ontouchstart = null;\n      lock.targetElement.ontouchmove = null;\n    });\n\n    if (documentListenerAdded) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = false;\n    }\n\n    // Reset initial clientY.\n    initialClientY = -1;\n  }\n\n  if (isIosDevice) {\n    restorePositionSetting();\n  } else {\n    restoreOverflowSetting();\n  }\n\n  locks = [];\n};\n\nexport var enableBodyScroll = function enableBodyScroll(targetElement) {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');\n    return;\n  }\n\n  locks = locks.filter(function (lock) {\n    return lock.targetElement !== targetElement;\n  });\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null;\n    targetElement.ontouchmove = null;\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = false;\n    }\n  }\n\n  if (isIosDevice) {\n    restorePositionSetting();\n  } else {\n    restoreOverflowSetting();\n  }\n};\n\n","// Save the clicked overlay link element for use down the line\naddEventListener(\"click\", event => {\n  window._overlasticAnchor = event.target.closest(\"a[data-turbo-frame^=overlay]\")\n}, true)\n\n// When an overlay anchor is clicked,\n// send its type, target and args along with the frame request\naddEventListener(\"turbo:before-fetch-request\", event => {\n  if (!window._overlasticAnchor) return\n\n  const anchor = window._overlasticAnchor\n  const type = anchor?.dataset?.overlayType\n  const target = anchor?.dataset?.overlayTarget\n  const args = anchor?.dataset?.overlayArgs\n\n  event.detail.fetchOptions.headers[\"Overlay-Initiator\"] = \"1\"\n\n  if (type) {\n    event.detail.fetchOptions.headers[\"Overlay-Type\"] = type\n  }\n\n  if (target) {\n    event.detail.fetchOptions.headers[\"Overlay-Target\"] = target\n  }\n\n  if (args) {\n    event.detail.fetchOptions.headers[\"Overlay-Args\"] = args\n  }\n\n  delete window._overlasticTarget\n})\n\n// When any other element triggers a fetch,\n// send the current overlay's target along with the frame request\naddEventListener(\"turbo:before-fetch-request\", event => {\n  if (window._overlasticAnchor) return\n\n  const frame = event.target.closest(\"turbo-frame[id^=overlay]\")\n\n  if (frame) {\n    const target = frame.dataset.overlayTarget\n    const initiator = frame.dataset?.overlayInitiator\n    const type = frame.dataset?.overlayType\n    const args = frame.dataset?.overlayArgs\n\n    event.detail.fetchOptions.headers[\"Overlay-Target\"] = target\n\n    if (initiator) {\n      event.detail.fetchOptions.headers[\"Overlay-Initiator\"] = initiator\n    }\n\n    if (type) {\n      event.detail.fetchOptions.headers[\"Overlay-Type\"] = type\n    }\n\n    if (args) {\n      event.detail.fetchOptions.headers[\"Overlay-Args\"] = args\n    }\n  }\n})\n\n// Handle frame-to-visit promotions when the server asks for it\naddEventListener(\"turbo:before-fetch-response\", async event => {\n  const fetchResponse = event.detail.fetchResponse\n  const visit = fetchResponse.response.headers.get(\"Overlay-Visit\")\n\n  if (!visit) return\n\n  const responseHTML = await fetchResponse.responseHTML\n  const { redirected, statusCode } = fetchResponse\n\n  return Turbo.session.visit(visit, { response: { redirected, statusCode, responseHTML } })\n})\n","export default class DialogElement extends HTMLElement {\n  connectedCallback() {\n    disableBodyScroll(this)\n\n    this.addEventListener(\"click\", event => this.close(event, true))\n    this.querySelector(\".overlastic-close\").addEventListener(\"click\", event => this.close(event))\n  }\n\n  close(event, self = false) {\n    if (self && event.target !== this) return\n\n    enableBodyScroll(this)\n\n    // Avoid removing before sending dispatching other events (like form submissions)\n    setTimeout(() => {\n      this.remove()\n    }, 5)\n  }\n}\n\ncustomElements.define(\"overlastic-dialog\", DialogElement)\n","import DialogElement from \"./dialogElement\"\n\nclass PaneElement extends DialogElement {\n  connectedCallback() {\n    super.connectedCallback()\n\n    const lastVisit = Turbo.navigator.history.location\n\n    if (!window.modalVisitStack) {\n      window.modalVisitStack = []\n    }\n\n    window.modalVisitStack.push(lastVisit)\n    Turbo.navigator.history.push(new URL(this.parentElement.src))\n  }\n\n  close(event, self = false) {\n    if (self && event.target !== this) return\n\n    super.close(event, self)\n\n    if (window.modalVisitStack.length > 0) {\n      Turbo.navigator.history.replace(window.modalVisitStack.pop())\n    }\n  }\n}\n\ncustomElements.define(\"overlastic-pane\", PaneElement)\n","import { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\"\n\nimport \"./clickInterceptor\"\nimport \"./dialogElement\"\nimport \"./paneElement\"\n\nwindow.disableBodyScroll = disableBodyScroll\nwindow.enableBodyScroll = enableBodyScroll\n"],"names":["hasPassiveEvents","window","passiveTestOptions","passive","addEventListener","removeEventListener","isIosDevice","navigator","platform","test","maxTouchPoints","locks","documentListenerAdded","initialClientY","previousBodyOverflowSetting","previousBodyPosition","previousBodyPaddingRight","allowTouchMove","el","some","lock","options","preventDefault","rawEvent","e","event","target","touches","length","_overlasticAnchor","closest","anchor","type","dataset","overlayType","overlayTarget","args","overlayArgs","detail","fetchOptions","headers","_overlasticTarget","frame","initiator","overlayInitiator","async","fetchResponse","visit","response","get","responseHTML","redirected","statusCode","Turbo","session","DialogElement","HTMLElement","[object Object]","disableBodyScroll","this","close","querySelector","self","enableBodyScroll","setTimeout","remove","customElements","define","super","connectedCallback","lastVisit","history","location","modalVisitStack","push","URL","parentElement","src","replace","pop","targetElement","concat","arr","Array","isArray","i","arr2","from","_toConsumableArray","requestAnimationFrame","undefined","position","document","body","style","top","left","_window","scrollY","scrollX","innerHeight","bottomBarHeight","_reserveScrollBarGap","reserveScrollBarGap","scrollBarGap","innerWidth","documentElement","clientWidth","computedBodyPaddingRight","parseInt","getComputedStyle","getPropertyValue","paddingRight","overflow","setOverflowHidden","ontouchstart","targetTouches","clientY","ontouchmove","scrollTop","scrollHeight","clientHeight","isTargetElementTotallyScrolled","stopPropagation","handleScroll","console","error","filter","y","x","scrollTo","restorePositionSetting"],"mappings":"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"}